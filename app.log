[2025-07-06 22:16:41,626] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[2025-07-06 22:16:41,626] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:16:41,697] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[2025-07-06 22:16:41,697] DEBUG tasks.tasks: DOGEMAIN Content: None
[2025-07-06 22:21:13,575] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[TextContent(type='text', text='{\n  "id": "4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14",\n  "labels": [\n    "Document"\n  ],\n  "filename": "DOGEMAIN",\n  "language": "COBOL",\n  "full_path": "workspace\\\\DOGECICS\\\\COBOL\\\\DOGEMAIN",\n  "classification": "Programming Language source file"\n}', annotations=None)]
[2025-07-06 22:21:13,575] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:21:13,647] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:21:13,647] DEBUG tasks.tasks: DOGEMAIN Content: None
[2025-07-06 22:26:39,172] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[TextContent(type='text', text='{\n  "id": "4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14",\n  "labels": [\n    "Document"\n  ],\n  "filename": "DOGEMAIN",\n  "language": "COBOL",\n  "full_path": "workspace\\\\DOGECICS\\\\COBOL\\\\DOGEMAIN",\n  "classification": "Programming Language source file"\n}', annotations=None)]
[2025-07-06 22:26:39,172] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:26:39,241] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:26:39,241] DEBUG tasks.tasks: DOGEMAIN Content: [TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:31:16,371] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[TextContent(type='text', text='{\n  "id": "4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14",\n  "labels": [\n    "Document"\n  ],\n  "filename": "DOGEMAIN",\n  "language": "COBOL",\n  "full_path": "workspace\\\\DOGECICS\\\\COBOL\\\\DOGEMAIN",\n  "classification": "Programming Language source file"\n}', annotations=None)]
[2025-07-06 22:31:16,371] DEBUG tasks.tasks: {'id': '4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14', 'labels': ['Document'], 'filename': 'DOGEMAIN', 'language': 'COBOL', 'full_path': 'workspace\\DOGECICS\\COBOL\\DOGEMAIN', 'classification': 'Programming Language source file'}
[2025-07-06 22:31:16,371] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:31:16,439] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:31:16,439] DEBUG tasks.tasks: DOGEMAIN Content: [TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:32:31,629] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[TextContent(type='text', text='{\n  "id": "4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14",\n  "labels": [\n    "Document"\n  ],\n  "filename": "DOGEMAIN",\n  "language": "COBOL",\n  "full_path": "workspace\\\\DOGECICS\\\\COBOL\\\\DOGEMAIN",\n  "classification": "Programming Language source file"\n}', annotations=None)]
[2025-07-06 22:32:31,629] DEBUG tasks.tasks: {'id': '4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14', 'labels': ['Document'], 'filename': 'DOGEMAIN', 'language': 'COBOL', 'full_path': 'workspace\\DOGECICS\\COBOL\\DOGEMAIN', 'classification': 'Programming Language source file'}
[2025-07-06 22:32:31,629] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:32:31,697] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:32:31,697] DEBUG tasks.tasks: DOGEMAIN Content: [TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:34:30,248] INFO utils.mcp_tools_helper: Tool call 'get_document_info' succeeded.
[TextContent(type='text', text='{\n  "id": "4:e10eaa5e-5305-4615-9d8c-0fdc9adbd5fa:14",\n  "labels": [\n    "Document"\n  ],\n  "filename": "DOGEMAIN",\n  "language": "COBOL",\n  "full_path": "workspace\\\\DOGECICS\\\\COBOL\\\\DOGEMAIN",\n  "classification": "Programming Language source file"\n}', annotations=None)]
[2025-07-06 22:34:30,248] DEBUG tasks.tasks: None
[2025-07-06 22:34:30,248] INFO tasks.tasks: retrieve_file_content
[2025-07-06 22:34:30,319] INFO utils.mcp_tools_helper: Tool call 'retrieve_file_content' succeeded.
[TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
[2025-07-06 22:34:30,319] DEBUG tasks.tasks: DOGEMAIN Content: [TextContent(type='text', text="      */////////////////////////////////////////////////////////////// \n      * DOGE Coin CICS/KICKS Application\n      * DOGEMAIN:\n      *   Displays the DOGE EBCDIC art and the main menu.\n      *\n      * AUTHOR:\n      *   Philip Young aka Soldier of FORTRAN\n      *\n      * 08/30/2020\n      * License GPL v3\n      *///////////////////////////////////////////////////////////////  \n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.   DOGECOIN.\n       AUTHOR. SOLDIER OF FORTRAN.\n       INSTALLATION. DOGE BANK.\n       DATE-WRITTEN. 08/30/20.\n       SECURITY. CONFIDENTIAL.\n       ENVIRONMENT DIVISION.\n       DATA DIVISION.\n       WORKING-STORAGE SECTION.\n      * To Create outgoing commands\n       77  RC            PIC S9(4) COMP VALUE +0.\n       77  SYSOUT-TOKEN  PIC X(8)  VALUE SPACES.\n      * Outgoing Comms ('B' is a space instead of using FILLER)\n       01  DOGEMSG.\n           05  DOGEID    PIC X(10)B VALUE 'DOGECICS99'.\n           05  ADDRSS    PIC X(34)B.\n           05  AMOUNT    PIC Z(02),Z(03),Z(02)9.9(8).\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n      * VSAM Record Layout\n       01  TRANSACTION.\n           05  TDATE     PIC X(10).\n           05  NUM-DATE  REDEFINES TDATE PIC 9(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TADDRSS   PIC X(34).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  TAMOUNT.\n               10  TAMT-SIGN                PIC X.\n                   88 TAMT-SIGN-POSITIVE    VALUE '+'.\n                   88 TAMT-SIGN-NEGATIVE    VALUE '-'.\n               10  TAMT-INTEGER-PART        PIC X(8).\n               10  TAMT-DEC-POINT           PIC X.\n               10  TAMT-DECIMAL-PART        PIC X(8).\n       01  THE-AMOUNT                       PIC S9(8)V9(8).\n       01  FILLER REDEFINES THE-AMOUNT.\n           05  THE-AMOUNT-INTEGER           PIC X(8).\n           05  THE-AMOUNT-DECIMAL           PIC S9(8).\n       01  AVAILABLE-AMOUNT                 PIC S9(8)V9(8).\n       01  RECENT-COLOR                     PIC X.\n       01  DISPLAY-TRAN.\n           05  DDATE     PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DLABEL    PIC X(10).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DSIGN     PIC X.\n           05  DAMOUNT   PIC Z(02),Z(03),Z(02)9.9(8).\n           05  FILLER    PIC X VALUE SPACES.\n           05  DTYPE     PIC XXXX VALUE 'DOGE'.\n       01  TEMP-DATE     PIC 9(15) COMP-3.\n       01  DOGEMSG-LEN   PIC 99 VALUE 61.\n       01  START-RECORD-ID PIC 9(10) VALUE 9999999999.\n       01  SINCE-EPOCH   PIC S9(15) COMP-3 VALUE +2208988800000.\n       01  RESPONSE-CODE  PIC S9(4) COMP.\n       01  RESPONSE-CODE2 PIC S9(4) COMP.\n       01  DOGECOMMS-AREA.\n           05  DOGE-FLAG                            PIC X.\n               88  SUCH-DOGE                        VALUE 'D'.\n               88  WOW-MENU                         VALUE 'W'.\n               88  SUCH-SEND                        VALUE 'S'.\n               88  SUCH-HISTORY                     VALUE 'T'.\n           05  FILLER PIC X(9).\n       01  WTO-MESSAGE PIC X(38) VALUE SPACES.\n      *\n       COPY DOGECN.\n       COPY DOGEMN.\n       COPY DFHAID.\n       COPY DFHBMSCA.\n       LINKAGE SECTION.\n      *\n       01  DFHCOMMAREA                       PIC X(10).\n      *\n       PROCEDURE DIVISION.\n       00000-MAIN.\n      *\n           IF EIBCALEN > ZERO THEN\n               MOVE DFHCOMMAREA TO DOGECOMMS-AREA.\n      *\n           IF EIBCALEN EQUAL TO ZERO OR SUCH-DOGE\n\n               MOVE 'STARTING DOGE CICS.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               MOVE 'DISPLAYING DOGE.' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n\n      * MAP IS DFHMDI FROM THE MAPSET\n      * MAPSET IS WHAT WE SET IN CEDA/CICS\n               EXEC CICS\n                    SEND MAP('DOGECN1')\n                         MAPSET('DOGECN')\n                         ERASE\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF3\n               EXEC CICS XCTL \n                   PROGRAM('DOGEQUIT')\n               END-EXEC\n           ELSE\n           IF EIBAID EQUAL TO DFHPF5\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF WOW-MENU\n               MOVE 'T' TO DOGECOMMS-AREA\n               PERFORM DOGE-MAIN-SCREEN\n           ELSE\n           IF EIBAID EQUAL TO DFHENTER\n                   PERFORM RECEIVE-OPTION\n                   PERFORM PARSE-OPTION.\n           EXEC CICS\n               RETURN TRANSID('DOGE')\n                      COMMAREA(DOGECOMMS-AREA)\n           END-EXEC.\n       DOGE-EXIT.\n           GOBACK.\n      *\n       RECEIVE-OPTION.\n      * Get the option the user enters\n\n           MOVE 'Getting Input from User.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS\n               RECEIVE MAP('DOGEMN1')\n                       MAPSET('DOGEMN')\n                       INTO(DOGEMN1I)\n           END-EXEC.\n\n       PARSE-OPTION.\n      *    Parse the user entry \n           IF OPTIONI EQUAL TO 'T' OR OPTIONI EQUAL TO 'M'\n               MOVE 'Opening Transaction History' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGETRAN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'W'         \n               MOVE 'Opening Main Menu' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGECOIN')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'D'\n               MOVE 'Opening Transaction Details' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGEDEET')\n               END-EXEC\n           ELSE\n           IF OPTIONI EQUAL TO 'S'\n               MOVE 'Opening Such Send' TO WTO-MESSAGE\n               PERFORM DOGE-WTO\n               EXEC CICS XCTL \n                   PROGRAM('DOGESEND')\n               END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.\n\n       DOGE-MAIN-SCREEN.\n      *    Show the main doge screen\n           MOVE 'Sending Doge CICS Main Screen.' TO WTO-MESSAGE.\n           PERFORM DOGE-WTO.\n           EXEC CICS STARTBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *        First is our dummy 'eyecatcher' records at the bottom\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *        Next is our last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT2C.\n           MOVE DISPLAY-TRAN TO RECNT2O.\n      *        Then our second to last record\n           EXEC CICS READPREV FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-DATE.\n           MOVE TLABEL TO DLABEL.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE RECENT-COLOR TO RECNT1C.\n      *    If theres only one historical record move it up     \n           IF TDATE = 0000000002\n               MOVE RECNT2O TO RECNT1O\n               MOVE SPACES TO RECNT1O\n           ELSE\n               MOVE DISPLAY-TRAN TO RECNT1O.\n      *    Now we get the current ammount\n      *    First we get reset the browse\n           MOVE 0000000001 TO START-RECORD-ID.\n           EXEC CICS RESETBR FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n           END-EXEC.\n      *    Then read the record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n      *    Convert it and put on the map\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO AVAILABLE-AMOUNT.\n           MOVE THE-AMOUNT TO AVAILO.\n      *    Get the next record\n           EXEC CICS READNEXT FILE('DOGEVSAM')\n                RIDFLD(START-RECORD-ID)\n                INTO(TRANSACTION)\n           END-EXEC.\n           PERFORM CONVERT-AMOUNT-TO-DISPLAY.\n           MOVE THE-AMOUNT TO PENDNGO.\n           ADD AVAILABLE-AMOUNT TO THE-AMOUNT.\n           MOVE THE-AMOUNT TO TOTALO.\n      *    Aaaaaand were done show the map now\n\n           EXEC CICS ENDBR \n               FILE('DOGEVSAM')\n           END-EXEC.\n\n           EXEC CICS\n                SEND MAP('DOGEMN1')\n                     MAPSET('DOGEMN')\n                     ERASE\n           END-EXEC.\n      *    \n       CONVERT-AMOUNT-TO-DISPLAY.\n      * Converts the number from VSAM to ##,###,###.########\n           MOVE DFHGREEN TO RECENT-COLOR.\n           MOVE TAMT-INTEGER-PART TO THE-AMOUNT-INTEGER.\n           MOVE TAMT-DECIMAL-PART TO THE-AMOUNT-DECIMAL.\n           IF TAMT-SIGN-NEGATIVE\n               MOVE DFHRED TO RECENT-COLOR\n               SUBTRACT THE-AMOUNT FROM ZERO GIVING THE-AMOUNT.\n           MOVE THE-AMOUNT TO DAMOUNT.\n           MOVE TAMT-SIGN TO DSIGN.\n      *\n       CONVERT-DATE.\n      *\n      * Converts Linux EPOCH to CICS Absolute Time\n      * and places it in DISPLAY-TRAN:DDATE as MM/DD/YYYY\n      *\n           MOVE NUM-DATE TO TEMP-DATE.\n           MULTIPLY 1000 BY TEMP-DATE.\n           ADD SINCE-EPOCH TO TEMP-DATE.\n           EXEC CICS FORMATTIME ABSTIME(TEMP-DATE)\n                DATESEP('/')\n                MMDDYYYY(DDATE)\n           END-EXEC.\n      *\n       DOGE-WTO.\n           EXEC CICS WRITE OPERATOR\n               TEXT(WTO-MESSAGE)\n           END-EXEC.\n           MOVE SPACES TO WTO-MESSAGE.", annotations=None)]
